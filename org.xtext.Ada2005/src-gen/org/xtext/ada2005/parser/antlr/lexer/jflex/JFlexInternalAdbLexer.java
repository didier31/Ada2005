package org.xtext.ada2005.parser.antlr.lexer.jflex;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognizerSharedState;
import org.antlr.runtime.Token;
/** 
 * This class is a scanner generated by  <a href="http://www.jflex.de/">JFlex</a> 1.6.1-SNAPSHOT from the specification file <tt>src/org/xtext/ada2005/parser/antlr/lexer/jflex/ada2005.jflex</tt>
 */
public abstract class JFlexInternalAdbLexer extends org.xtext.ada2005.parser.antlr.lexer.InternalAdbLexer {
  /** 
 * This character denotes the end of file 
 */
  public static final int YYEOF=-1;
  /** 
 * initial size of the lookahead buffer 
 */
  private static final int ZZ_BUFFERSIZE=16384;
  /** 
 * lexical states 
 */
  public static final int YYINITIAL=0;
  /** 
 * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l at the beginning of a line l is of the form l = 2*k, k a non negative integer
 */
  private static final int ZZ_LEXSTATE[]={0,0};
  /** 
 * Translates characters to character classes
 */
  private static final String ZZ_CMAP_PACKED="\11\0\1\31\1\100\1\76\1\76\1\77\22\0\1\21\1\75\1\25" + "\1\12\2\26\1\30\1\22\1\72\1\73\1\44\1\11\1\71\1\10" + "\1\13\1\41\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1"+ "\1\1\1\1\1\70\1\67\1\42\1\40\1\43\2\27\1\14\1\15"+ "\1\16\1\17\1\7\1\20\1\56\1\61\1\54\1\32\1\64\1\52"+ "\1\45\1\34\1\35\1\51\1\65\1\36\1\47\1\50\1\57\1\62"+ "\1\60\1\37\1\55\1\66\4\27\1\6\1\27\1\14\1\15\1\16"+ "\1\17\1\7\1\20\1\56\1\61\1\54\1\32\1\64\1\52\1\45"+ "\1\34\1\35\1\51\1\65\1\36\1\47\1\50\1\57\1\62\1\60"+ "\1\37\1\55\1\66\1\27\1\74\10\27\1\102\44\27\1\32\2\27"+ "\1\2\14\27\1\32\165\27\2\53\115\27\1\46\73\27\1\32\4\27"+ "\1\32\2\27\1\32\3\32\3\32\3\32\44\27\3\32\240\27\1\32"+ "\33\27\22\32\4\27\14\32\16\27\5\32\7\27\1\32\1\27\1\32"+ "\21\27\160\2\4\27\1\32\5\27\1\32\u0108\27\5\2\321\27\1\32"+ "\67\27\55\2\1\27\1\2\1\27\1\2\1\2\1\27\1\2\1\2"+ "\1\27\1\2\10\27\1\32\31\27\1\32\5\27\1\32\1\27\1\32"+ "\15\27\5\2\13\27\13\2\5\27\1\32\36\27\1\32\1\32\1\32"+ "\10\27\1\32\25\2\12\2\4\27\1\32\1\32\1\2\1\32\141\27"+ "\1\32\1\27\1\32\7\2\1\2\1\27\6\2\1\32\1\32\1\2"+ "\1\2\1\27\4\2\1\32\1\32\12\2\1\32\1\27\1\32\2\27"+ "\1\32\17\27\1\2\1\32\1\2\1\32\34\27\1\32\33\2\2\27"+ "\1\32\127\27\1\32\13\2\1\32\16\27\12\2\1\32\37\27\1\32"+ "\11\2\1\32\1\32\4\27\1\32\5\27\1\32\24\27\1\32\4\2"+ "\1\32\11\2\1\32\3\2\1\32\5\2\22\27\1\32\27\27\1\32"+ "\3\2\104\27\1\32\1\27\1\32\11\27\1\32\67\27\33\2\1\27"+ "\3\2\1\2\1\32\64\27\1\32\1\2\1\2\1\2\1\32\3\2"+ "\10\2\4\2\1\2\1\2\1\2\1\32\7\2\1\32\10\27\1\32"+ "\1\2\1\2\2\27\12\2\1\27\1\32\1\32\4\27\1\32\1\27"+ "\1\32\5\27\1\32\1\27\1\2\1\2\1\2\1\27\1\32\6\27"+ "\1\32\2\27\1\32\1\32\2\27\1\32\24\27\1\32\1\27\1\32"+ "\5\27\1\32\1\27\1\32\3\27\1\32\2\27\1\32\2\27\1\2"+ "\1\32\3\2\4\2\2\27\1\2\1\2\2\27\1\2\1\2\1\2"+ "\1\32\10\27\1\2\4\27\1\32\1\32\1\27\1\32\1\27\1\32"+ "\1\2\1\2\2\27\12\2\1\32\1\32\17\27\1\2\1\2\1\2"+ "\1\27\1\32\4\27\1\32\4\27\1\32\1\32\2\27\1\32\24\27"+ "\1\32\1\27\1\32\5\27\1\32\1\27\1\32\1\32\1\27\1\32"+ "\1\32\1\27\1\32\1\32\2\27\1\2\1\27\3\2\1\2\1\2"+ "\4\27\1\2\1\2\2\27\3\2\3\27\1\2\7\27\1\32\2\27"+ "\1\32\1\27\1\32\7\27\12\2\1\2\1\2\1\32\1\27\1\32"+ "\1\2\13\27\1\2\1\2\1\2\1\27\1\32\7\27\1\32\1\27"+ "\1\32\1\27\1\32\1\27\1\32\24\27\1\32\1\27\1\32\5\27"+ "\1\32\1\27\1\32\1\32\1\27\1\32\3\27\1\32\2\27\1\2"+ "\1\32\3\2\5\2\1\27\1\2\1\2\1\2\1\27\1\2\1\2"+ "\1\2\2\27\1\32\17\27\1\32\1\32\1\2\1\2\2\27\12\2"+ "\21\27\1\2\1\2\1\2\1\27\1\32\6\27\1\32\2\27\1\32"+ "\1\32\2\27\1\32\24\27\1\32\1\27\1\32\5\27\1\32\1\27"+ "\1\32\1\32\1\27\1\32\3\27\1\32\2\27\1\2\1\32\1\2"+ "\1\2\1\2\4\2\2\27\1\2\1\2\2\27\1\2\1\2\1\2"+ "\10\27\1\2\1\2\4\27\1\32\1\32\1\27\1\32\1\27\1\32"+ "\1\2\1\2\2\27\12\2\1\27\1\32\20\27\1\2\1\32\1\27"+ "\1\32\4\27\1\32\3\27\1\32\1\27\1\32\1\27\1\32\2\27"+ "\1\32\3\27\1\32\1\32\1\27\1\32\1\27\1\32\1\32\3\27"+ "\1\32\1\32\3\27\1\32\1\27\1\32\3\27\1\32\12\27\1\32"+ "\4\27\1\2\1\2\1\2\1\2\1\2\3\27\3\2\1\27\3\2"+ "\1\2\2\27\1\32\6\27\1\2\16\27\12\2\21\27\3\2\1\27"+ "\1\32\6\27\1\32\1\27\1\32\1\27\1\32\1\27\1\32\25\27"+ "\1\32\1\27\1\32\10\27\1\32\1\27\1\32\3\27\1\32\3\27"+ "\1\32\3\2\4\2\1\27\3\2\1\27\4\2\7\27\1\2\1\2"+ "\1\27\1\32\1\32\6\27\1\32\1\32\1\2\1\2\2\27\12\2"+ "\22\27\1\2\1\2\1\27\1\32\6\27\1\32\1\27\1\32\1\27"+ "\1\32\1\27\1\32\25\27\1\32\1\27\1\32\10\27\1\32\1\27"+ "\1\32\3\27\1\32\2\27\1\2\1\32\1\2\1\2\5\2\1\27"+ "\1\2\1\2\1\2\1\27\1\2\1\2\1\2\1\2\7\27\1\2"+ "\1\2\7\27\1\32\1\27\1\32\1\32\1\2\1\2\2\27\12\2"+ "\1\27\1\32\1\32\17\27\1\2\1\2\1\27\1\32\6\27\1\32"+ "\1\27\1\32\1\27\1\32\1\27\1\32\47\27\1\32\2\27\1\32"+ "\3\2\4\2\1\27\3\2\1\27\3\2\1\2\1\32\10\27\1\2"+ "\10\27\1\32\1\32\1\2\1\2\2\27\12\2\12\27\1\32\4\27"+ "\1\32\2\27\1\2\1\2\1\27\1\32\20\27\1\32\3\27\1\32"+ "\26\27\1\32\1\27\1\32\7\27\1\32\1\27\1\32\2\27\1\32"+ "\5\27\1\32\3\27\1\2\4\27\3\2\3\2\1\27\1\2\1\27"+ "\10\2\22\27\1\2\1\2\15\27\1\32\56\27\1\32\1\2\1\32"+ "\1\32\7\2\5\27\1\32\4\27\1\32\1\32\10\2\1\27\12\2"+ "\47\27\1\32\1\32\1\27\1\32\2\27\1\32\1\32\1\27\1\32"+ "\2\27\1\32\6\27\1\32\2\27\1\32\1\27\1\32\5\27\1\32"+ "\1\27\1\32\1\27\1\32\1\27\1\32\1\27\1\32\2\27\1\32"+ "\1\32\1\27\1\32\2\27\1\32\1\2\1\32\1\32\6\2\1\27"+ "\1\2\1\2\1\32\2\27\1\32\3\27\1\32\1\27\1\32\1\27"+ "\6\2\2\27\12\2\2\27\1\32\2\27\1\32\40\27\1\32\27\27"+ "\1\2\1\2\6\27\12\2\13\27\1\2\1\27\1\2\1\27\1\2"+ "\4\27\1\2\1\2\1\32\6\27\1\32\1\27\1\32\42\27\1\32"+ "\4\27\16\2\1\2\5\2\1\27\1\2\1\2\1\32\3\27\1\32"+ "\13\2\1\27\44\2\11\27\1\2\71\27\1\32\51\27\1\32\1\2"+ "\1\2\4\2\1\2\6\2\1\2\1\2\1\2\1\2\1\2\1\2"+ "\1\2\1\32\12\2\6\27\1\32\4\27\1\32\1\2\1\2\1\2"+ "\1\2\1\32\2\27\1\32\3\2\1\32\3\2\1\32\1\32\7\2"+ "\1\32\1\27\1\32\4\2\1\32\13\27\1\32\1\2\1\2\1\2"+ "\1\2\1\2\6\2\1\2\1\32\1\2\12\2\3\2\1\2\62\27"+ "\1\32\51\27\1\32\1\27\1\32\1\32\u014a\27\1\32\1\27\1\32"+ "\2\27\1\32\2\27\1\32\5\27\1\32\1\27\1\32\1\27\1\32"+ "\2\27\1\32\2\27\1\32\47\27\1\32\1\27\1\32\2\27\1\32"+ "\2\27\1\32\37\27\1\32\1\27\1\32\2\27\1\32\2\27\1\32"+ "\5\27\1\32\1\27\1\32\1\27\1\32\2\27\1\32\2\27\1\32"+ "\15\27\1\32\1\27\1\32\67\27\1\32\1\27\1\32\2\27\1\32"+ "\2\27\1\32\101\27\1\32\2\27\3\2\40\27\1\32\16\27\1\32"+ "\20\27\1\32\123\27\1\32\14\27\1\32\u026a\27\1\32\2\27\1\32"+ "\17\27\1\32\1\27\1\32\30\27\1\32\5\27\1\32\111\27\1\32"+ "\3\27\3\32\17\27\1\32\13\27\1\32\1\27\1\32\2\27\1\32"+ "\3\2\13\27\1\32\20\27\1\32\3\2\13\27\1\32\20\27\1\32"+ "\1\2\1\2\14\27\1\32\13\27\1\32\1\27\1\32\1\27\1\32"+ "\1\27\1\2\1\2\14\27\1\32\62\27\1\32\1\2\1\2\1\2"+ "\7\2\10\2\1\2\1\2\1\2\13\2\3\27\1\32\4\27\1\32"+ "\1\2\2\27\12\2\41\27\3\2\2\27\12\2\6\27\1\32\41\27"+ "\1\32\1\32\1\32\62\27\1\32\10\27\1\32\47\27\1\32\1\2"+ "\1\32\5\27\1\32\104\27\1\32\12\27\1\32\33\27\1\32\3\27"+ "\3\2\4\2\1\2\1\2\3\2\4\27\1\2\1\2\1\2\6\2"+ "\3\2\12\27\12\2\1\32\34\27\1\32\2\27\1\32\3\27\1\32"+ "\13\27\1\32\52\27\1\32\4\27\21\2\1\32\5\27\1\32\1\2"+ "\1\2\6\27\12\2\46\27\1\32\25\27\1\32\1\2\1\2\3\2"+ "\4\27\1\32\63\27\1\32\1\2\1\2\1\2\7\2\1\27\1\2"+ "\1\2\1\2\1\2\1\2\10\2\6\2\12\2\2\27\1\2\12\2"+ "\6\27\12\2\15\27\1\32\130\27\4\2\1\2\1\32\55\27\1\32"+ "\1\2\1\2\5\2\1\2\1\2\5\2\1\2\1\2\1\2\1\32"+ "\5\27\1\32\4\27\12\2\21\27\11\2\14\27\1\2\1\2\1\2"+ "\1\32\34\27\1\32\1\2\4\2\1\2\1\2\1\2\1\2\1\2"+ "\1\2\1\2\1\2\1\32\1\32\12\2\1\32\52\27\1\32\1\2"+ "\1\2\1\2\1\2\3\2\1\2\1\2\3\2\1\2\1\2\14\27"+ "\1\32\42\27\1\32\10\2\10\2\1\2\1\2\1\2\1\2\10\27"+ "\12\2\3\27\1\32\1\27\1\32\12\2\1\32\34\27\1\32\6\32"+ "\122\27\3\2\1\27\15\2\1\2\7\2\1\32\2\27\1\32\1\2"+ "\1\32\2\27\1\32\1\2\1\2\1\2\1\32\1\32\65\27\77\32"+ "\15\27\1\32\42\27\45\32\47\2\25\27\4\2\u0188\27\10\32\10\27"+ "\10\32\10\27\10\32\3\27\1\32\10\27\1\32\6\27\1\32\10\27"+ "\1\32\46\27\1\32\10\27\1\32\3\27\13\0\5\3\30\0\1\101"+ "\1\101\5\3\20\0\1\3\1\3\23\0\1\3\13\0\5\3\5\0"+ "\6\3\1\0\1\33\15\0\1\33\20\0\15\33\63\0\15\3\4\0"+ "\1\3\3\0\14\3\71\0\1\63\12\0\1\33\2\0\1\33\47\0"+ "\43\33\2\0\4\33\u0af3\0\1\33\1\33\161\0\3\3\76\0\1\33"+ "\66\0\1\33\7\0\1\33\17\0\1\3\1\33\25\0\1\33\11\0"+ "\1\33\5\0\1\33\1\0\1\33\5\0\1\33\1\0\1\33\5\0"+ "\1\33\1\0\1\33\5\0\1\33\1\0\1\33\5\0\1\33\1\0"+ "\1\33\5\0\1\33\1\0\1\33\5\0\1\33\1\0\1\33\5\0"+ "\1\33\1\0\40\3\57\0\1\33\u01d5\0\1\33\1\33\1\33\31\0"+ "\11\33\4\3\1\3\1\3\1\0\5\33\2\0\3\33\1\33\1\33"+ "\4\0\1\33\124\0\1\33\2\0\1\3\1\3\2\0\1\33\1\33"+ "\1\33\1\0\1\33\130\0\1\33\1\0\3\33\1\33\5\0\1\33"+ "\47\0\1\33\3\0\1\33\134\0\1\33\21\0\1\33\31\0\1\33"+ "\65\0\1\33\16\0\1\33\u0200\0\1\33\u19b4\0\1\33\112\0\1\33"+ "\u51cb\0\1\33\63\0\1\33\23\0\1\33\1\33\1\33\u0475\0\1\33"+ "\103\0\1\33\46\0\1\33\6\33\2\0\1\33\u010a\0\1\33\1\33"+ "\3\0\1\33\16\0\1\33\12\3\1\33\1\33\102\0\1\33\1\3"+ "\4\0\12\3\1\0\1\33\37\0\1\3\1\33\104\0\1\33\12\33"+ "\1\3\1\3\45\0\11\33\120\0\1\33\27\0\1\33\157\0\1\33"+ "\1\33\1\0\1\33\5\0\1\33\1\3\1\33\1\0\1\33\1\3"+ "\1\33\2\0\1\33\1\3\1\33\25\0\1\33\1\3\1\3\1\3"+ "\1\3\1\3\30\0\1\33\62\0\1\33\14\0\1\3\1\3\1\33"+ "\60\0\1\33\20\3\1\3\13\0\12\3\6\0\22\3\1\33\4\0"+ "\1\33\3\0\1\33\4\0\12\3\1\33\32\0\1\33\10\3\2\0"+ "\1\33\25\0\1\33\13\3\1\3\1\3\14\0\1\33\33\0\1\33"+ "\3\0\3\3\1\3\1\33\55\0\1\33\1\3\1\3\1\3\4\3"+ "\1\3\1\3\1\3\4\3\16\0\1\33\12\3\46\0\1\33\47\0"+ "\1\33\6\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3"+ "\11\0\1\33\1\0\1\33\1\3\1\33\6\0\1\33\1\3\1\3"+ "\2\0\12\3\6\0\1\33\16\0\1\33\1\33\1\33\4\0\1\33"+ "\3\0\1\33\1\3\4\0\1\33\56\0\1\33\1\3\1\33\3\3"+ "\1\33\1\33\1\3\1\3\1\33\3\0\1\33\1\3\1\3\1\33"+ "\1\3\1\33\30\0\1\33\1\33\1\33\2\0\1\33\11\0\1\33"+ "\1\3\1\3\1\3\1\3\1\3\2\0\1\33\1\33\1\33\1\3"+ "\1\3\12\0\1\33\4\0\1\33\2\0\1\33\4\0\1\33\2\0"+ "\1\33\4\0\1\33\11\0\1\33\5\0\1\33\1\0\1\33\5\0"+ "\1\33\221\0\1\33\41\0\1\33\1\4\1\4\1\3\1\4\1\4"+ "\1\3\1\4\1\4\1\0\1\4\1\3\2\0\12\3\6\0\1\33"+ "\u2ba2\0\1\33\14\0\1\33\25\0\1\33\4\0\1\33\57\0\1\33"+ "\u2104\0\1\33\u016c\0\1\33\2\0\1\33\150\0\1\33\103\0\1\33"+ "\1\3\1\33\10\0\1\33\1\0\1\33\13\0\1\33\1\0\1\33"+ "\3\0\1\33\1\0\1\33\1\0\1\33\1\33\1\0\1\33\1\33"+ "\1\0\1\33\152\0\1\33\41\0\1\33\u0169\0\1\33\22\0\1\33"+ "\76\0\1\33\2\0\1\33\64\0\1\33\50\0\1\33\12\0\1\33"+ "\4\0\20\3\20\0\7\3\14\0\1\3\1\3\30\0\3\3\40\0"+ "\1\33\3\0\1\33\1\0\1\33\205\0\1\33\2\0\1\3\20\0"+ "\12\3\45\0\1\3\46\0\1\33\10\0\1\33\1\33\1\33\53\0"+ "\1\33\1\33\1\33\1\33\35\0\1\33\3\0\1\33\4\0\1\33"+ "\2\0\1\33\4\0\1\33\2\0\1\33\4\0\1\33\2\0\1\33"+ "\1\0\1\33\34\0\3\3\3\0\1\23\1\33\12\0\1\33\1\0"+ "\1\33\30\0\1\33\1\0\1\33\21\0\1\33\1\0\1\33\1\33"+ "\1\0\1\33\15\0\1\33\2\0\1\33\14\0\1\33\42\0\1\33"+ "\171\0\1\33\105\0\65\33\210\0\1\3\202\0\1\33\33\0\1\33"+ "\3\0\1\33\57\0\1\33\57\0\1\33\35\0\1\33\21\0\1\33"+ "\17\0\1\33\1\33\1\33\6\0\1\33\1\33\65\0\1\33\34\0"+ "\1\33\2\0\1\33\42\0\1\33\4\0\1\33\6\0\1\33\1\0"+ "\5\33\172\0\1\33\114\0\1\33\2\0\12\3\u0356\0\1\33\4\0"+ "\1\33\2\0\1\33\1\0\1\33\52\0\1\33\1\0\1\33\1\33"+ "\3\0\1\33\2\0\1\33\25\0\1\33\252\0\1\33\24\0\1\33"+ "\12\0\1\33\30\0\1\33\106\0\1\33\66\0\1\33\6\0\1\33"+ "\1\33\100\0\1\33\3\3\1\0\1\3\1\3\5\0\4\3\1\33"+ "\2\0\1\33\1\0\1\33\1\0\1\33\1\0\1\33\31\0\1\33"+ "\4\0\3\3\4\0\1\3\40\0\1\33\33\0\1\33\203\0\1\33"+ "\64\0\1\33\12\0\1\33\24\0\1\33\12\0\1\33\21\0\1\33"+ "\215\0\1\33\107\0\1\33\u03b6\0\1\24\1\4\1\3\1\4\1\33"+ "\63\0\1\33\17\3\37\0\12\3\20\0\1\3\1\3\1\5\1\33"+ "\53\0\1\33\3\5\4\3\1\5\1\5\1\3\1\3\2\0\1\3"+ "\22\0\1\33\27\0\1\33\7\0\12\3\6\0\3\3\1\33\42\0"+ "\1\33\5\3\1\5\10\3\1\0\12\3\100\0\1\3\1\3\1\5"+ "\1\33\56\0\1\33\3\5\11\3\1\3\1\3\1\33\2\0\1\33"+ "\13\0\12\3\u04a6\0\1\33\51\0\1\33\1\3\1\3\1\3\1\3"+ "\1\3\6\3\1\3\1\3\10\0\12\3\u0936\0\1\33\u036d\0\1\33"+ "\221\0\143\33\u0b9d\0\1\33\u042d\0\1\33\u33d1\0\1\33\u0237\0\1\33"+ "\u04c7\0\1\33\103\0\1\33\13\0\1\33\56\3\20\0\4\3\15\33"+ "\u4060\0\1\33\1\33\u2163\0\1\3\1\3\3\3\3\0\6\3\10\3"+ "\10\3\2\0\7\3\36\0\4\3\224\0\3\3\u0589\0\62\3\u1600\0"+ "\1\33\2\0\1\33\1\0\1\33\31\0\1\33\1\0\1\33\1\33"+ "\1\0\1\33\2\0\1\33\1\0\1\33\10\0\1\33\1\0\1\33"+ "\2\0\1\33\1\0\1\33\1\0\1\33\6\0\1\33\4\0\1\33"+ "\1\0\1\33\1\0\1\33\1\0\1\33\1\0\1\33\1\0\1\33"+ "\1\33\1\0\1\33\2\0\1\33\1\0\1\33\1\0\1\33\1\0"+ "\1\33\1\0\1\33\1\0\1\33\1\33\1\0\1\33\2\0\1\33"+ "\2\0\1\33\1\0\1\33\5\0\1\33\1\0\1\33\2\0\1\33"+ "\1\0\1\33\2\0\1\33\1\0\1\33\1\0\1\33\10\0\1\33"+ "\1\0\1\33\17\0\1\33\5\0\1\33\1\0\1\33\1\0\1\33"+ "\3\0\1\33\1\0\1\33\17\0\1\33\u1144\0\1\33\ua6d5\0\1\33"+ "\51\0\1\33\u1033\0\1\33\13\0\1\33\334\0\1\33\u3fe2\0\1\33"+ "\u021c\0\1\33\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+ "\1\3\36\0\140\3\200\0\360\3\uffff\0\uffff\0\ufe12\0";
  /** 
 * Translates characters to character classes
 */
  private static final char[] ZZ_CMAP=zzUnpackCMap(ZZ_CMAP_PACKED);
  /** 
 * Translates DFA states to action switch labels.
 */
  private static final int[] ZZ_ACTION=zzUnpackAction();
  private static final String ZZ_ACTION_PACKED_0="\4\0\1\1\1\2\1\3\1\4\1\5\1\6\5\3" + "\1\7\1\10\1\1\1\11\5\3\1\12\1\13\1\14" + "\1\15\1\16\1\3\1\1\4\3\1\1\4\3\1\17"+ "\1\20\1\21\1\22\1\23\1\24\12\0\3\3\1\25"+ "\1\26\4\3\1\27\6\3\1\30\1\0\3\3\6\0"+ "\1\31\7\0\3\3\1\32\1\33\6\3\1\34\1\35"+ "\1\36\1\37\1\40\1\41\1\42\1\43\1\3\3\0"+ "\12\3\1\0\1\3\1\44\1\45\1\46\1\44\1\45"+ "\1\46\3\3\1\0\1\3\1\0\2\3\1\47\6\0"+ "\1\2\2\0\1\2\1\50\2\3\1\0\1\3\1\0"+ "\1\3\1\0\1\3\2\51\1\3\1\52\1\3\1\53"+ "\1\0\3\3\1\0\4\3\1\0\1\3\1\54\1\3"+ "\1\0\1\55\4\0\1\56\1\57\2\3\1\60\3\3"+ "\1\61\4\3\1\0\1\3\1\62\1\63\4\0\5\3"+ "\1\0\7\3\1\0\2\3\1\0\1\3\1\0\4\3"+ "\2\64\1\0\2\3\1\0\1\3\2\0\1\2\1\0"+ "\2\3\2\65\1\66\1\0\1\66\2\3\1\0\3\3"+ "\1\0\1\3\1\0\1\3\1\67\2\70\1\0\4\3"+ "\1\0\2\3\4\0\3\71\1\72\10\3\1\0\1\3"+ "\4\0\5\3\2\73\1\3\1\74\1\75\1\0\4\3"+ "\1\0\1\3\1\76\1\0\1\3\1\0\2\3\1\77"+ "\1\0\1\3\2\100\1\101\1\0\1\3\1\0\1\102"+ "\1\3\2\103\1\104\1\0\1\3\1\0\2\3\1\105"+ "\1\0\1\3\2\106\1\0\2\3\1\107\1\110\1\0"+ "\2\3\1\0\2\111\2\112\1\113\7\3\1\114\2\115"+ "\4\0\4\3\1\0\2\3\1\0\4\3\1\0\1\3"+ "\1\0\1\3\1\0\2\3\2\116\2\117\1\3\1\0"+ "\1\3\2\120\1\121\1\0\1\3\1\0\2\3\2\122"+ "\1\0\1\3\1\0\2\123\1\0\1\3\1\124\1\3"+ "\1\125\1\0\2\3\1\0\1\126\2\0\1\3\1\126"+ "\2\3\1\0\1\3\1\127\1\0\1\3\1\130\2\3"+ "\1\0\1\3\1\0\1\3\1\0\1\3\1\0\1\3"+ "\1\0\1\3\1\0\1\3\2\131\1\0\1\3\1\132"+ "\1\0\1\3\1\0\1\3\2\133\2\134\1\135\2\0"+ "\1\136\2\3\1\136\1\0\1\3\2\137\2\3\2\140"+ "\2\141\1\0\1\3\2\142\1\0\1\3\2\143\2\144"+ "\2\145\1\0\1\3\1\146\1\0\1\146\1\3\1\0"+ "\3\3\1\0\1\3\2\147\1\0\1\3\1\0\1\3"+ "\2\150\1\151\1\152\2\153\2\154\1\0\1\3\1\0"+ "\1\3\2\155";
  private static int[] zzUnpackAction(){
    int[] result=new int[516];
    int offset=0;
    offset=zzUnpackAction(ZZ_ACTION_PACKED_0,offset,result);
    return result;
  }
  private static int zzUnpackAction(  String packed,  int offset,  int[] result){
    int i=0;
    int j=offset;
    int l=packed.length();
    while (i < l) {
      int count=packed.charAt(i++);
      int value=packed.charAt(i++);
      do       result[j++]=value;
 while (--count > 0);
    }
    return j;
  }
  /** 
 * Translates a state to a row index in the transition table
 */
  private static final int[] ZZ_ROWMAP=zzUnpackRowMap();
  private static final String ZZ_ROWMAP_PACKED_0="\0\0\0\103\0\206\0\311\0\u010c\0\u014f\0\u0192\0\u01d5" + "\0\u010c\0\u0218\0\u025b\0\u029e\0\u02e1\0\u0324\0\u0367\0\u03aa" + "\0\u03ed\0\u0430\0\u010c\0\u0473\0\u04b6\0\u04f9\0\u053c\0\u057f"+ "\0\u05c2\0\u0605\0\u0648\0\u068b\0\u06ce\0\u0711\0\u0754\0\u0797"+ "\0\u07da\0\u081d\0\u0860\0\u08a3\0\u08e6\0\u0929\0\u096c\0\u09af"+ "\0\u010c\0\u09f2\0\u010c\0\u010c\0\u010c\0\u010c\0\u0a35\0\u0a78"+ "\0\u0abb\0\u0afe\0\u0b41\0\u0b84\0\u0bc7\0\u0c0a\0\u0c4d\0\u0c90"+ "\0\u0cd3\0\u0d16\0\u0d59\0\u0d9c\0\u010c\0\u0ddf\0\u0e22\0\u0e65"+ "\0\u0ea8\0\u0473\0\u0eeb\0\u0f2e\0\u0f71\0\u0fb4\0\u0ff7\0\u103a"+ "\0\u0473\0\u107d\0\u10c0\0\u1103\0\u1146\0\u1189\0\u11cc\0\u120f"+ "\0\u1252\0\u1295\0\u12d8\0\u131b\0\u135e\0\u13a1\0\u13e4\0\u1427"+ "\0\u146a\0\u14ad\0\u14f0\0\u1533\0\u1576\0\u15b9\0\u0473\0\u0473"+ "\0\u15fc\0\u163f\0\u1682\0\u16c5\0\u1708\0\u174b\0\u010c\0\u010c"+ "\0\u010c\0\u010c\0\u010c\0\u010c\0\u010c\0\u010c\0\u178e\0\u17d1"+ "\0\u1814\0\u1857\0\u189a\0\u18dd\0\u1920\0\u1963\0\u19a6\0\u19e9"+ "\0\u1a2c\0\u1a6f\0\u1ab2\0\u1af5\0\u1b38\0\u1b7b\0\u010c\0\u1bbe"+ "\0\u010c\0\u0473\0\u1c01\0\u0473\0\u1c44\0\u1c87\0\u1cca\0\u1d0d"+ "\0\u1d50\0\u1d93\0\u1dd6\0\u1e19\0\u010c\0\u1e5c\0\u1e9f\0\u010c"+ "\0\u1ee2\0\u1f25\0\u1f25\0\u1f68\0\u1fab\0\u1fee\0\u2031\0\u0473"+ "\0\u2074\0\u20b7\0\u20fa\0\u213d\0\u2180\0\u21c3\0\u2206\0\u2249"+ "\0\u228c\0\u22cf\0\u2312\0\u0473\0\u2355\0\u0473\0\u2398\0\u23db"+ "\0\u241e\0\u2461\0\u24a4\0\u24e7\0\u252a\0\u256d\0\u25b0\0\u25f3"+ "\0\u2636\0\u0473\0\u2679\0\u26bc\0\u131b\0\u26ff\0\u2742\0\u2785"+ "\0\u27c8\0\u0473\0\u0473\0\u280b\0\u284e\0\u0473\0\u2891\0\u28d4"+ "\0\u2917\0\u0473\0\u295a\0\u299d\0\u29e0\0\u2a23\0\u2a66\0\u2aa9"+ "\0\u0473\0\u0473\0\u2aec\0\u2b2f\0\u2b72\0\u2bb5\0\u2bf8\0\u2c3b"+ "\0\u2c7e\0\u2cc1\0\u2d04\0\u2d47\0\u2d8a\0\u2dcd\0\u2e10\0\u2e53"+ "\0\u2e96\0\u2ed9\0\u2f1c\0\u2f5f\0\u2fa2\0\u2fe5\0\u3028\0\u306b"+ "\0\u30ae\0\u30f1\0\u3134\0\u3177\0\u31ba\0\u010c\0\u0473\0\u31fd"+ "\0\u3240\0\u3283\0\u32c6\0\u3309\0\u010c\0\u334c\0\u338f\0\u33d2"+ "\0\u3415\0\u3458\0\u010c\0\u0473\0\u010c\0\u349b\0\u0473\0\u34de"+ "\0\u3521\0\u3564\0\u35a7\0\u35ea\0\u362d\0\u3670\0\u36b3\0\u36f6"+ "\0\u3739\0\u0473\0\u010c\0\u0473\0\u377c\0\u37bf\0\u3802\0\u3845"+ "\0\u3888\0\u38cb\0\u390e\0\u3951\0\u3994\0\u39d7\0\u3a1a\0\u3a5d"+ "\0\u3994\0\u3aa0\0\u39d7\0\u0473\0\u3ae3\0\u3b26\0\u3b69\0\u3bac"+ "\0\u3bef\0\u3c32\0\u3c75\0\u3cb8\0\u3cfb\0\u3d3e\0\u3d81\0\u3dc4"+ "\0\u3e07\0\u3e4a\0\u3e8d\0\u3ed0\0\u3f13\0\u3f56\0\u3f99\0\u010c"+ "\0\u0473\0\u3fdc\0\u0473\0\u0473\0\u401f\0\u4062\0\u40a5\0\u40e8"+ "\0\u412b\0\u416e\0\u41b1\0\u0473\0\u41f4\0\u4237\0\u427a\0\u42bd"+ "\0\u4300\0\u0473\0\u4343\0\u4386\0\u010c\0\u0473\0\u0473\0\u43c9"+ "\0\u440c\0\u444f\0\u0473\0\u4492\0\u010c\0\u0473\0\u0473\0\u44d5"+ "\0\u4518\0\u455b\0\u459e\0\u45e1\0\u0473\0\u4624\0\u4667\0\u010c"+ "\0\u0473\0\u46aa\0\u46ed\0\u4730\0\u0473\0\u0473\0\u4773\0\u47b6"+ "\0\u47f9\0\u483c\0\u010c\0\u483c\0\u010c\0\u487f\0\u010c\0\u48c2"+ "\0\u4905\0\u4948\0\u498b\0\u49ce\0\u4a11\0\u4a54\0\u0473\0\u010c"+ "\0\u0473\0\u4a97\0\u4ada\0\u4b1d\0\u4b60\0\u4ba3\0\u4be6\0\u4c29"+ "\0\u4c6c\0\u4caf\0\u4cf2\0\u4d35\0\u4d78\0\u4dbb\0\u4dfe\0\u4e41"+ "\0\u4e84\0\u4ec7\0\u4f0a\0\u4f4d\0\u4f90\0\u4fd3\0\u5016\0\u5059"+ "\0\u010c\0\u0473\0\u010c\0\u0473\0\u509c\0\u50df\0\u5122\0\u010c"+ "\0\u0473\0\u0473\0\u5165\0\u51a8\0\u51eb\0\u522e\0\u5271\0\u010c"+ "\0\u0473\0\u52b4\0\u52f7\0\u533a\0\u010c\0\u0473\0\u537d\0\u53c0"+ "\0\u0473\0\u5403\0\u0473\0\u5446\0\u5489\0\u54cc\0\u550f\0\u010c"+ "\0\u5552\0\u5595\0\u55d8\0\u0473\0\u561b\0\u565e\0\u56a1\0\u56e4"+ "\0\u0473\0\u5727\0\u576a\0\u0473\0\u57ad\0\u57f0\0\u5833\0\u5876"+ "\0\u58b9\0\u58fc\0\u593f\0\u5982\0\u59c5\0\u5a08\0\u5a4b\0\u5a8e"+ "\0\u5ad1\0\u5b14\0\u010c\0\u0473\0\u5b57\0\u5b9a\0\u0473\0\u5bdd"+ "\0\u5c20\0\u5c63\0\u5ca6\0\u010c\0\u0473\0\u010c\0\u0473\0\u0473"+ "\0\u5ce9\0\u5d2c\0\u010c\0\u5d6f\0\u5db2\0\u0473\0\u5df5\0\u5e38"+ "\0\u010c\0\u0473\0\u5e7b\0\u5ebe\0\u010c\0\u0473\0\u010c\0\u0473"+ "\0\u5f01\0\u5f44\0\u010c\0\u0473\0\u5f87\0\u5fca\0\u010c\0\u0473"+ "\0\u010c\0\u0473\0\u010c\0\u0473\0\u600d\0\u6050\0\u010c\0\u6093"+ "\0\u0473\0\u60d6\0\u6119\0\u615c\0\u619f\0\u61e2\0\u6225\0\u6268"+ "\0\u010c\0\u0473\0\u62ab\0\u62ee\0\u6331\0\u6374\0\u010c\0\u0473"+ "\0\u0473\0\u0473\0\u010c\0\u0473\0\u010c\0\u0473\0\u63b7\0\u63fa"+ "\0\u643d\0\u6480\0\u010c\0\u0473";
  private static int[] zzUnpackRowMap(){
    int[] result=new int[516];
    int offset=0;
    offset=zzUnpackRowMap(ZZ_ROWMAP_PACKED_0,offset,result);
    return result;
  }
  private static int zzUnpackRowMap(  String packed,  int offset,  int[] result){
    int i=0;
    int j=offset;
    int l=packed.length();
    while (i < l) {
      int high=packed.charAt(i++) << 16;
      result[j++]=high | packed.charAt(i++);
    }
    return j;
  }
  /** 
 * The transition table of the DFA
 */
  private static final int[] ZZ_TRANS=zzUnpackTrans();
  private static final String ZZ_TRANS_PACKED_0="\1\5\1\6\5\5\1\7\1\10\1\11\1\5\1\12" + "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\2\5" + "\1\22\2\5\1\23\1\20\2\24\1\25\1\26\1\27"+ "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+ "\1\40\1\41\1\42\1\43\1\44\1\45\1\24\1\46"+ "\1\47\1\50\2\24\1\5\3\24\1\51\1\52\1\53"+ "\1\54\1\55\2\56\3\20\24\0\1\57\156\0\2\60"+ "\1\61\2\60\1\62\2\60\3\62\4\60\1\62\6\60"+ "\1\62\1\63\4\62\1\60\2\62\1\60\1\62\27\60"+ "\1\62\11\60\5\62\1\60\104\0\1\6\4\0\1\64"+ "\1\65\2\0\1\66\1\67\70\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\2\24\1\71\2\24\1\72"+ "\5\0\1\24\1\0\3\24\1\73\1\0\7\24\1\0"+ "\3\24\24\0\1\74\105\0\1\75\70\0\3\24\1\70"+ "\1\0\2\24\4\0\1\24\1\76\1\77\2\24\11\0"+ "\2\24\1\100\1\24\1\101\1\24\5\0\1\24\1\0"+ "\1\24\1\102\1\24\1\103\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\1\24\1\104\4\0\5\24"+ "\11\0\3\24\1\105\2\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\1\106\4\24\11\0\3\24\1\107\2\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\1\24\1\110\4\0\5\24"+ "\11\0\3\24\1\111\2\24\5\0\1\24\1\0\4\24"+ "\1\112\1\113\6\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\3\24\1\114\2\24"+ "\5\0\1\24\1\0\4\24\1\0\3\24\1\115\3\24"+ "\1\0\3\24\35\0\1\20\7\0\1\20\44\0\3\20"+ "\3\0\2\116\3\0\14\116\1\0\1\116\1\117\4\116"+ "\1\0\1\116\1\0\27\116\1\0\12\116\4\0\1\116"+ "\1\0\2\120\3\0\2\120\2\121\2\120\1\122\7\120"+ "\1\123\1\124\2\120\1\121\1\0\1\120\1\0\1\125"+ "\1\126\1\127\1\130\1\121\3\131\1\132\1\133\15\120"+ "\1\0\12\120\4\0\1\120\1\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\1\24\1\134\4\0\5\24\11\0\3\24\1\135"+ "\2\24\5\0\1\24\1\0\4\24\1\0\3\24\1\136"+ "\3\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\4\24\1\137\11\0\4\24\1\140\1\24\5\0"+ "\1\24\1\0\1\24\1\141\2\24\1\0\3\24\1\142"+ "\2\24\1\143\1\0\3\24\15\0\3\24\1\70\1\0"+ "\1\24\1\144\4\0\1\145\4\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\3\24"+ "\1\146\2\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\57\0\1\147\77\0\1\150\102\0\1\151"+ "\1\0\1\152\1\153\77\0\1\154\2\0\1\155\103\0"+ "\1\156\37\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\3\24\1\157\2\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\23\0\1\160\45\0\1\161"+ "\1\0\1\162\24\0\3\24\1\70\1\0\1\24\1\163"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\1\24\1\164\1\24\1\165\3\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\1\24\1\166\4\0\1\167"+ "\4\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\1\24\1\170\3\24\1\171\1\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\1\172\4\24\11\0"+ "\4\24\1\173\1\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\3\24\1\174\2\24\5\0\1\24"+ "\1\0\4\24\1\175\1\176\6\24\1\0\3\24\34\0"+ "\1\177\13\0\1\200\11\0\2\201\34\0\3\24\1\70"+ "\1\0\2\24\4\0\4\24\1\202\11\0\2\24\1\203"+ "\3\24\5\0\1\24\1\201\1\204\3\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\205"+ "\4\0\5\24\11\0\3\24\1\206\2\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\2\24\1\207"+ "\3\24\5\0\1\24\1\210\1\211\3\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\212"+ "\1\213\4\24\1\214\1\24\1\0\3\24\54\0\1\215"+ "\43\0\2\216\3\0\14\216\1\0\1\216\1\217\4\216"+ "\1\0\1\216\1\0\27\216\1\0\12\216\4\0\1\216"+ "\1\0\2\220\3\0\12\220\1\221\1\220\1\0\1\220"+ "\1\0\4\220\1\0\1\220\1\0\27\220\1\0\12\220"+ "\4\0\1\220\1\0\2\220\3\0\12\220\1\221\1\220"+ "\1\0\1\220\1\0\4\220\1\0\1\220\1\0\27\220"+ "\1\0\12\220\1\0\1\60\2\0\1\220\1\0\2\220"+ "\3\0\12\220\1\221\1\220\1\0\1\220\1\0\3\220"+ "\1\222\1\0\1\220\1\0\27\220\1\0\12\220\4\0"+ "\1\220\30\0\1\223\53\0\1\6\102\0\1\224\6\0"+ "\2\225\72\0\1\226\5\0\1\226\4\0\5\226\63\0"+ "\1\227\106\0\1\24\76\0\3\24\1\70\1\0\2\24"+ "\4\0\3\24\1\230\1\24\11\0\6\24\5\0\1\24"+ "\1\0\1\24\1\231\2\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\2\24\1\232"+ "\2\24\11\0\6\24\5\0\1\24\1\0\4\24\1\233"+ "\1\234\6\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\235"+ "\1\236\3\24\1\0\7\24\1\0\3\24\15\0\2\74"+ "\3\0\16\74\1\237\6\74\1\0\27\74\1\0\12\74"+ "\4\0\1\74\1\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\3\24\1\240\2\24\5\0\1\24\1\241"+ "\1\242\3\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\2\24\1\243\2\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\3\24"+ "\1\244\1\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\4\24\1\245\1\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\3\24\1\246\1\247\1\250\6\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\2\24\1\251\4\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\3\24\1\252\1\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\253\1\254\3\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\2\24\1\255\3\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\2\24\1\256\2\24\11\0\6\24"+ "\5\0\1\24\1\0\3\24\1\257\1\0\7\24\1\0"+ "\3\24\72\0\1\260\25\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\2\24\1\261\4\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\4\24\1\262"+ "\1\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\2\24\1\263\3\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\36\0\1\264\100\0\1\116"+ "\63\0\2\120\3\0\16\120\1\123\1\124\3\120\1\0"+ "\1\120\1\0\27\120\1\0\12\120\4\0\1\120\1\0"+ "\2\120\3\0\16\120\1\123\1\265\3\120\1\0\1\120"+ "\1\0\27\120\1\0\12\120\4\0\1\120\1\0\2\120"+ "\3\0\7\120\1\266\6\120\1\123\1\124\3\120\1\0"+ "\1\120\1\0\1\267\26\120\1\0\12\120\4\0\1\120"+ "\20\0\1\120\107\0\1\120\56\0\2\120\3\0\16\120"+ "\1\123\1\124\3\120\1\0\1\120\1\0\1\120\1\270"+ "\25\120\1\0\12\120\4\0\1\120\1\0\2\120\3\0"+ "\16\120\1\123\1\124\3\120\1\0\1\120\1\0\2\120"+ "\1\121\24\120\1\0\12\120\4\0\1\120\1\0\2\120"+ "\3\0\1\120\1\271\14\120\1\123\1\124\3\120\1\0"+ "\1\120\1\0\27\120\1\0\12\120\4\0\1\120\1\0"+ "\2\120\3\0\16\120\1\123\1\124\3\120\1\0\1\120"+ "\1\0\1\120\1\126\25\120\1\0\12\120\4\0\1\120"+ "\1\0\2\120\3\0\16\120\1\123\1\265\3\120\1\0"+ "\1\120\1\0\4\120\1\121\22\120\1\0\12\120\4\0"+ "\1\120\1\0\2\120\3\0\16\120\1\123\1\265\3\120"+ "\1\0\1\120\1\0\10\120\1\121\16\120\1\0\12\120"+ "\4\0\1\120\1\0\2\120\3\0\16\120\1\123\1\124"+ "\3\120\1\0\1\120\1\0\1\120\1\267\25\120\1\0"+ "\12\120\4\0\1\120\1\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\4\24\1\272\2\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\1\24\1\273\2\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\3\24\1\274\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\5\24\1\275\1\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\1\24\1\276\2\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\1\24\1\277\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\2\24\1\300\2\24\11\0\2\24\1\301\3\24"+ "\5\0\1\302\1\0\1\24\1\303\2\24\1\0\6\24"+ "\1\304\1\0\1\24\1\305\1\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\2\24\1\306\3\24"+ "\5\0\1\24\1\0\4\24\1\307\1\310\6\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\4\24\1\311\1\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\3\24\1\312\1\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\65\0"+ "\1\313\1\314\64\0\1\315\63\0\1\316\66\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\2\24\1\317\1\320\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\2\24\1\321\3\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\1\24\1\322\3\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\4\24"+ "\1\323\1\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\324\1\325\3\24"+ "\1\0\2\24\1\326\4\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\2\24\1\327\1\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\1\24\1\330\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\2\24\1\331\2\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\1\332\4\24\11\0\3\24"+ "\1\333\2\24\5\0\1\24\1\0\4\24\1\334\1\335"+ "\6\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\3\24\1\336\2\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\61\0\1\337"+ "\36\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\340\1\0\4\24\1\0\7\24\1\0"+ "\3\24\64\0\1\341\33\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\1\24"+ "\1\342\2\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\2\24\1\343"+ "\3\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\344\2\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\1\24\1\345\2\24\1\0\7\24\1\0\3\24\23\0"+ "\1\346\74\0\3\24\1\70\1\0\1\24\1\347\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\64\0\1\350\33\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\1\24\1\351\2\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\1\24\1\352\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\353\1\354"+ "\6\24\1\0\3\24\36\0\1\355\100\0\1\216\106\0"+ "\1\220\106\0\1\356\53\0\1\224\4\0\1\225\75\0"+ "\1\224\102\0\1\226\4\0\1\66\1\226\2\0\1\357"+ "\1\360\5\226\63\0\1\227\4\0\1\67\1\65\74\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\4\24"+ "\1\361\1\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\362"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\64\0\1\363\33\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\1\24\1\364\2\24\1\0\7\24\1\0"+ "\3\24\23\0\1\365\43\0\2\366\27\0\3\24\1\70"+ "\1\0\1\24\1\367\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\366\1\370\6\24\1\0\3\24"+ "\34\0\1\74\63\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\4\24\1\371\1\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\64\0\1\372\33\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\1\24\1\373\2\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\374"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\1\375\4\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\30\0\1\376"+ "\67\0\3\24\1\70\1\0\2\24\4\0\1\377\4\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\u0100"+ "\1\u0101\6\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\1\24\1\u0102\5\24\1\0\3\24\23\0"+ "\1\u0103\74\0\3\24\1\70\1\0\1\24\1\u0104\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\u0105\1\u0106"+ "\3\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\3\24\1\u0107\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\1\u0108\4\24\11\0"+ "\6\24\5\0\1\24\1\0\1\24\1\u0109\2\24\1\0"+ "\7\24\1\0\3\24\67\0\2\u010a\27\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\u010a\1\u010b\6\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\2\24\1\u010c\2\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\14\0\1\u010d\2\u010e\3\u010d\4\u010e\1\u010f"+ "\6\u010e\1\u010f\1\u010d\1\u010e\1\u0110\2\u010f\1\u010e\1\u010f"+ "\1\u010d\1\u010e\1\u010d\27\u010e\1\u010d\11\u010e\1\u010f\1\u0111"+ "\1\u0112\2\u0111\1\u0113\1\0\2\120\3\0\16\120\1\123"+ "\1\124\3\120\1\0\1\120\1\0\12\120\2\121\13\120"+ "\1\0\12\120\4\0\1\120\1\0\2\120\3\0\11\120"+ "\1\121\4\120\1\123\1\124\3\120\1\0\1\120\1\0"+ "\27\120\1\0\12\120\4\0\1\120\1\0\2\120\3\0"+ "\16\120\1\123\1\124\3\120\1\0\1\120\1\0\14\120"+ "\1\121\12\120\1\0\12\120\4\0\1\120\1\0\2\120"+ "\3\0\16\120\1\123\1\124\3\120\1\0\1\120\1\0"+ "\11\120\1\121\15\120\1\0\12\120\4\0\1\120\1\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\3\24\1\u0114\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\1\24\1\u0115\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\4\24\1\u0116\1\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\3\24\1\u0117"+ "\2\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\1\u0118"+ "\4\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\3\24\1\u0119\3\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\1\24\1\u011a\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\3\24\1\u011b"+ "\3\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\2\24\1\u011c\4\24\1\0\3\24\62\0\2\u011d"+ "\34\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\u011d\1\u011e\3\24\1\0\7\24"+ "\1\0\3\24\30\0\1\u011f\75\0\1\u0120\111\0\1\u0121"+ "\134\0\1\u0122\33\0\3\24\1\70\1\0\2\24\4\0"+ "\1\u0123\4\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\1\24\1\u0124\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\2\24\1\u0125\2\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\u0126\2\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\u0127\1\0"+ "\4\24\1\0\7\24\1\0\3\24\77\0\2\u0128\17\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\u0128\1\u0129"+ "\2\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\2\24"+ "\1\u012a\4\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\1\24\1\u012b\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\2\24\1\u012c"+ "\3\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\u012d\1\u012e\2\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\2\24\1\u012f\4\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\2\24\1\u0130\2\24\11\0"+ "\6\24\5\0\1\24\1\0\1\24\1\u0131\2\24\1\0"+ "\7\24\1\0\3\24\76\0\1\u0132\21\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\6\24\1\u0133\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\2\24\1\u0134\1\24\1\0\7\24"+ "\1\0\3\24\67\0\2\u0135\27\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\u0135\1\u0136\6\24\1\0\3\24\23\0\1\u0137"+ "\74\0\3\24\1\70\1\0\1\24\1\u0138\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\u0139"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\3\24\1\u013a\2\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\u013b\1\u013c\6\24\1\0"+ "\3\24\75\0\1\u013d\22\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\5\24\1\u013e\1\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\2\24\1\u013f"+ "\3\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\66\0\1\u0140\31\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\3\24"+ "\1\u0141\1\0\7\24\1\0\3\24\14\0\12\220\1\0"+ "\6\220\1\0\3\220\2\0\1\220\1\0\44\220\1\0"+ "\5\220\7\0\1\65\74\0\1\u0142\5\0\1\u0142\4\0"+ "\5\u0142\63\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\1\24"+ "\1\u0143\5\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\2\24\1\u0144\1\24\1\0\7\24\1\0\3\24\34\0"+ "\1\u0145\63\0\3\24\1\70\1\0\2\24\4\0\4\24"+ "\1\u0146\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\1\24"+ "\1\u0147\2\24\1\0\7\24\1\0\3\24\52\0\1\u0148"+ "\45\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\4\24\1\u0149\1\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\u014a\1\u014b"+ "\1\24\1\u014c\1\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\1\24\1\u014d\5\24"+ "\1\0\3\24\62\0\2\u014e\34\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\u014e"+ "\1\u014f\3\24\1\0\7\24\1\0\3\24\50\0\1\u0150"+ "\47\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\2\24\1\u0151\3\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\64\0\1\u0152\33\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\1\24\1\u0153\2\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\1\u0154\4\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\1\24\1\u0155\5\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\1\u0156\4\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\64\0"+ "\1\u0157\33\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\u0158\2\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\1\24\1\u0159\2\24\1\0\7\24\1\0\3\24\44\0"+ "\1\u015a\52\0\22\u015b\1\0\5\u015b\1\u015c\45\u015b\1\u015d"+ "\1\u015e\3\u015d\22\u015b\1\0\53\u015b\1\u015d\1\u015e\3\u015d"+ "\20\0\1\u010f\7\0\1\u015a\102\0\1\u015a\47\0\1\u015f"+ "\3\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\4\24\1\u0160\1\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\4\24\1\u0161\1\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\4\24\1\u0162"+ "\1\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\u0163\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\4\24\1\u0164\1\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\4\24\1\u0165\1\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\1\24\1\u0166\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\u0167"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\23\0\1\u0168\74\0\3\24"+ "\1\70\1\0\1\24\1\u0169\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\52\0\1\u016a\62\0\1\u016b\145\0\1\u016c\76\0\1\u016d"+ "\26\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\4\24\1\u016e\1\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\2\24\1\u016f\2\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\5\24\1\u0170\1\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\1\24"+ "\1\u0171\5\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\u0172\1\u0173\6\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\1\24\1\u0174\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\30\0\1\u0175\67\0\3\24\1\70\1\0\2\24\4\0"+ "\1\u0176\4\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\u0177\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\1\24\1\u0178\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\1\24\1\u0179\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\30\0\1\u017a\67\0\3\24\1\70\1\0\2\24"+ "\4\0\1\u017b\4\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\64\0\1\u017c\33\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\1\24\1\u017d\2\24\1\0\7\24"+ "\1\0\3\24\52\0\1\u017e\45\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\4\24\1\u017f\1\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\4\24"+ "\1\u0180\1\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\66\0\1\u0181\31\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\3\24\1\u0182\1\0\7\24\1\0\3\24\23\0\1\u0183"+ "\74\0\3\24\1\70\1\0\1\24\1\u0184\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\1\u0142\4\0\1\360\1\u0142\2\0"+ "\1\357\1\0\5\u0142\63\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\1\24"+ "\1\u0185\2\24\1\0\7\24\1\0\3\24\30\0\1\u0186"+ "\67\0\3\24\1\70\1\0\2\24\4\0\1\u0187\4\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\62\0\2\u0188\34\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\u0188"+ "\1\u0189\3\24\1\0\7\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\1\24\1\u018a\2\24\1\0\7\24\1\0"+ "\3\24\23\0\1\u018b\74\0\3\24\1\70\1\0\1\24"+ "\1\u018c\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\30\0\1\u018d\67\0"+ "\3\24\1\70\1\0\2\24\4\0\1\u018e\4\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\4\24\1\u018f\1\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\62\0\2\u0190\34\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\u0190\1\u0191\3\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\u0192\1\u0193\6\24"+ "\1\0\3\24\44\0\1\u0194\152\0\1\u015d\3\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\u0195\1\u0196\3\24\1\0\7\24\1\0\3\24"+ "\15\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\u0197\1\u0198\6\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\3\24\1\u0199\1\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\1\24\1\u019a\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\2\24"+ "\1\u019b\3\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\u019c\1\u019d\3\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\3\24\1\u019e\3\24\1\0\3\24\30\0"+ "\1\u019f\136\0\1\u01a0\70\0\1\u01a1\115\0\1\u01a2\32\0"+ "\3\24\1\70\1\0\2\24\4\0\1\u01a3\4\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\u01a4\2\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\4\24\1\u01a5\1\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\2\24\1\u01a6\1\24\1\0\7\24"+ "\1\0\3\24\50\0\1\u01a7\47\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\2\24\1\u01a8\3\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\3\24\1\u01a9\1\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\72\0\1\u01aa\25\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\2\24\1\u01ab\4\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\1\u01ac\4\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\3\24"+ "\1\u01ad\1\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\2\24\1\u01ae\2\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\64\0"+ "\1\u01af\33\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\u01b0\2\24"+ "\1\0\7\24\1\0\3\24\23\0\1\u01b1\74\0\3\24"+ "\1\70\1\0\1\24\1\u01b2\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\34\0\1\u01b3\63\0\3\24\1\70\1\0\2\24\4\0"+ "\4\24\1\u01b4\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\u01b5\1\u01b6\6\24\1\0\3\24\15\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\u01b7\1\u01b8\6\24\1\0\3\24"+ "\32\0\1\u01b9\65\0\3\24\1\70\1\0\2\24\4\0"+ "\2\24\1\u01ba\2\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\33\0\1\u01bb\64\0"+ "\3\24\1\70\1\0\2\24\4\0\3\24\1\u01bc\1\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\50\0\1\u01bd\47\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\2\24\1\u01be\3\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\1\24\1\u01bf\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\51\0\1\u01c0\46\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\3\24\1\u01c1\2\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\14\0\1\u015b"+ "\2\0\3\u015b\4\0\1\u015b\6\0\6\u015b\1\0\2\u015b"+ "\1\0\1\u015b\27\0\1\u015b\11\0\5\u015b\20\0\1\u01c2"+ "\64\0\3\24\1\70\1\0\2\24\4\0\3\24\1\u01c3"+ "\1\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\u01c4\1\u01c5"+ "\3\24\1\0\7\24\1\0\3\24\23\0\1\u01c6\74\0"+ "\3\24\1\70\1\0\1\24\1\u01c7\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\1\24\1\u01c8\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\64\0\1\u01c9\67\0\1\u01ca\54\0"+ "\1\u01cb\74\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\1\24\1\u01cc\2\24"+ "\1\0\7\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\3\24\1\u01cd\2\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\1\24\1\u01ce\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\30\0\1\u01cf\67\0\3\24\1\70\1\0\2\24"+ "\4\0\1\u01d0\4\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\23\0\1\u01d1\74\0"+ "\3\24\1\70\1\0\1\24\1\u01d2\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\15\0\3\24\1\70\1\0\2\24\4\0\5\24"+ "\11\0\6\24\5\0\1\24\1\0\4\24\1\0\3\24"+ "\1\u01d3\3\24\1\0\3\24\15\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\1\24\1\u01d4\2\24\1\0\7\24\1\0\3\24\23\0"+ "\1\u01d5\74\0\3\24\1\70\1\0\1\24\1\u01d6\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\33\0\1\u01d7\64\0\3\24\1\70"+ "\1\0\2\24\4\0\3\24\1\u01d8\1\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\30\0\1\u01d9\67\0\3\24\1\70\1\0\2\24\4\0"+ "\1\u01da\4\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\32\0\1\u01db\65\0\3\24"+ "\1\70\1\0\2\24\4\0\2\24\1\u01dc\2\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\51\0\1\u01dd\46\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\3\24\1\u01de\2\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\64\0\1\u01df"+ "\33\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\1\24\1\u01e0\2\24\1\0"+ "\7\24\1\0\3\24\64\0\1\u01e1\33\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\1\24\1\u01e2\2\24\1\0\7\24\1\0\3\24"+ "\50\0\1\u01e3\47\0\3\24\1\70\1\0\2\24\4\0"+ "\5\24\11\0\2\24\1\u01e4\3\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\67\0\2\u01e5\27\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\u01e5\1\u01e6\6\24\1\0"+ "\3\24\23\0\1\u01e7\127\0\1\u01e8\47\0\3\24\1\70"+ "\1\0\1\24\1\u01e9\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\2\24"+ "\1\u01ea\3\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\64\0\1\u01eb\33\0\3\24\1\70\1\0"+ "\2\24\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\1\24\1\u01ec\2\24\1\0\7\24\1\0\3\24\15\0"+ "\3\24\1\70\1\0\2\24\4\0\5\24\11\0\4\24"+ "\1\u01ed\1\24\5\0\1\24\1\0\4\24\1\0\7\24"+ "\1\0\3\24\15\0\3\24\1\70\1\0\1\24\1\u01ee"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\32\0\1\u01ef\65\0\3\24"+ "\1\70\1\0\2\24\4\0\2\24\1\u01f0\2\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\50\0\1\u01f1\47\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\2\24\1\u01f2\3\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\50\0\1\u01f3"+ "\47\0\3\24\1\70\1\0\2\24\4\0\5\24\11\0"+ "\2\24\1\u01f4\3\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\67\0\2\u01f5\27\0\3\24\1\70"+ "\1\0\2\24\4\0\5\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\u01f5\1\u01f6\6\24\1\0\3\24\23\0"+ "\1\u01f7\74\0\3\24\1\70\1\0\1\24\1\u01f8\4\0"+ "\5\24\11\0\6\24\5\0\1\24\1\0\4\24\1\0"+ "\7\24\1\0\3\24\15\0\3\24\1\70\1\0\1\24"+ "\1\u01f9\4\0\5\24\11\0\6\24\5\0\1\24\1\0"+ "\4\24\1\0\7\24\1\0\3\24\15\0\3\24\1\70"+ "\1\0\2\24\4\0\3\24\1\u01fa\1\24\11\0\6\24"+ "\5\0\1\24\1\0\4\24\1\0\7\24\1\0\3\24"+ "\23\0\1\u01fb\74\0\3\24\1\70\1\0\1\24\1\u01fc"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\3\24\72\0\1\u01fd\25\0\3\24"+ "\1\70\1\0\2\24\4\0\5\24\11\0\6\24\5\0"+ "\1\24\1\0\4\24\1\0\2\24\1\u01fe\4\24\1\0"+ "\3\24\102\0\1\u01ff\15\0\3\24\1\70\1\0\2\24"+ "\4\0\5\24\11\0\6\24\5\0\1\24\1\0\4\24"+ "\1\0\7\24\1\0\2\24\1\u0200\23\0\1\u0201\74\0"+ "\3\24\1\70\1\0\1\24\1\u0202\4\0\5\24\11\0"+ "\6\24\5\0\1\24\1\0\4\24\1\0\7\24\1\0"+ "\3\24\33\0\1\u0203\64\0\3\24\1\70\1\0\2\24"+ "\4\0\3\24\1\u0204\1\24\11\0\6\24\5\0\1\24"+ "\1\0\4\24\1\0\7\24\1\0\3\24\14\0";
  private static int[] zzUnpackTrans(){
    int[] result=new int[25795];
    int offset=0;
    offset=zzUnpackTrans(ZZ_TRANS_PACKED_0,offset,result);
    return result;
  }
  private static int zzUnpackTrans(  String packed,  int offset,  int[] result){
    int i=0;
    int j=offset;
    int l=packed.length();
    while (i < l) {
      int count=packed.charAt(i++);
      int value=packed.charAt(i++);
      value--;
      do       result[j++]=value;
 while (--count > 0);
    }
    return j;
  }
  private static final int ZZ_UNKNOWN_ERROR=0;
  private static final int ZZ_NO_MATCH=1;
  private static final int ZZ_PUSHBACK_2BIG=2;
  private static final String ZZ_ERROR_MSG[]={"Unknown internal scanner error","Error: could not match input","Error: pushback value was too large"};
  /** 
 * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
 */
  private static final int[] ZZ_ATTRIBUTE=zzUnpackAttribute();
  private static final String ZZ_ATTRIBUTE_PACKED_0="\4\0\1\11\3\1\1\11\11\1\1\11\25\1\1\11" + "\1\1\4\11\12\0\4\1\1\11\14\1\1\0\3\1" + "\6\0\1\1\7\0\13\1\10\11\1\1\3\0\12\1"+ "\1\0\1\1\1\11\1\1\1\11\6\1\1\0\1\1"+ "\1\0\2\1\1\11\2\0\1\11\2\1\1\0\1\1"+ "\2\0\4\1\1\0\1\1\1\0\1\1\1\0\7\1"+ "\1\0\3\1\1\0\4\1\1\0\3\1\1\0\1\1"+ "\4\0\15\1\1\0\3\1\4\0\5\1\1\0\7\1"+ "\1\0\2\1\1\0\1\1\1\0\4\1\1\11\1\1"+ "\1\0\2\1\1\0\1\1\1\11\1\0\1\1\1\0"+ "\2\1\1\11\1\1\1\11\1\0\3\1\1\0\3\1"+ "\1\0\1\1\1\0\2\1\1\11\1\1\1\0\4\1"+ "\1\0\2\1\4\0\14\1\1\0\1\1\4\0\5\1"+ "\1\11\4\1\1\0\4\1\1\0\2\1\1\0\1\1"+ "\1\0\3\1\1\0\1\1\1\11\2\1\1\0\1\1"+ "\1\0\2\1\1\11\2\1\1\0\1\1\1\0\3\1"+ "\1\0\1\1\1\11\1\1\1\0\4\1\1\0\2\1"+ "\1\0\1\11\1\1\1\11\1\1\1\11\10\1\1\11"+ "\1\1\4\0\4\1\1\0\2\1\1\0\4\1\1\0"+ "\1\1\1\0\1\1\1\0\2\1\1\11\1\1\1\11"+ "\2\1\1\0\1\1\1\11\2\1\1\0\1\1\1\0"+ "\2\1\1\11\1\1\1\0\1\1\1\0\1\11\1\1"+ "\1\0\4\1\1\0\2\1\1\0\1\11\2\0\4\1"+ "\1\0\2\1\1\0\4\1\1\0\1\1\1\0\1\1"+ "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+ "\1\11\1\1\1\0\2\1\1\0\1\1\1\0\1\1"+ "\1\11\1\1\1\11\2\1\2\0\1\11\3\1\1\0"+ "\1\1\1\11\3\1\1\11\1\1\1\11\1\1\1\0"+ "\1\1\1\11\1\1\1\0\1\1\1\11\1\1\1\11"+ "\1\1\1\11\1\1\1\0\1\1\1\11\1\0\2\1"+ "\1\0\3\1\1\0\1\1\1\11\1\1\1\0\1\1"+ "\1\0\1\1\1\11\3\1\1\11\1\1\1\11\1\1"+ "\1\0\1\1\1\0\1\1\1\11\1\1";
  private static int[] zzUnpackAttribute(){
    int[] result=new int[516];
    int offset=0;
    offset=zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0,offset,result);
    return result;
  }
  private static int zzUnpackAttribute(  String packed,  int offset,  int[] result){
    int i=0;
    int j=offset;
    int l=packed.length();
    while (i < l) {
      int count=packed.charAt(i++);
      int value=packed.charAt(i++);
      do       result[j++]=value;
 while (--count > 0);
    }
    return j;
  }
  /** 
 * the input device 
 */
  protected org.xtext.ada2005.parser.antlr.lexer.jflex.Reader zzReader;
  /** 
 * the current state of the DFA 
 */
  private int zzState;
  /** 
 * the current lexical state 
 */
  private int zzLexicalState=YYINITIAL;
  /** 
 * this buffer contains the current text to be matched and is the source of the yytext() string 
 */
  private char zzBuffer[]=new char[ZZ_BUFFERSIZE];
  /** 
 * the textposition at the last accepting state 
 */
  private int zzMarkedPos;
  /** 
 * the current text position in the buffer 
 */
  private int zzCurrentPos;
  /** 
 * startRead marks the beginning of the yytext() string in the buffer 
 */
  private int zzStartRead;
  /** 
 * endRead marks the last character in the buffer, that has been read from input 
 */
  private int zzEndRead;
  /** 
 * number of newlines encountered up to the start of the matched text 
 */
  private int yyline;
  /** 
 * the number of characters up to the start of the matched text 
 */
  private int yychar;
  /** 
 * the number of characters from the last newline up to the start of the  matched text
 */
  private int yycolumn;
  /** 
 * zzAtBOL == true <=> the scanner is currently at the beginning of a line
 */
  private boolean zzAtBOL=true;
  /** 
 * zzAtEOF == true <=> the scanner is at the EOF 
 */
  private boolean zzAtEOF;
  /** 
 * denotes if the user-EOF-code has already been executed 
 */
  private boolean zzEOFDone;
  /** 
 * The number of occupied positions in zzBuffer beyond zzEndRead. When a lead/high surrogate has been read from the input stream into the final zzBuffer position, this will have a value of 1; otherwise, it will have a value of 0.
 */
  private int zzFinalHighSurrogate=0;
  /** 
 * For the backwards DFA of general lookahead statements 
 */
  private boolean[] zzFin=new boolean[ZZ_BUFFERSIZE + 1];
  public JFlexInternalAdbLexer(  CharStream input,  RecognizerSharedState state){
    super(input,state);
  }
  public JFlexInternalAdbLexer(  CharStream input){
    this(input,new RecognizerSharedState());
  }
  public JFlexInternalAdbLexer(){
    this(null,new RecognizerSharedState());
  }
  /** 
 * @return the zzEOFDone
 */
  public boolean isZzEOFDone(){
    return zzEOFDone;
  }
  /** 
 * @param zzEOFDone the zzEOFDone to set
 */
  public void setZzEOFDone(  boolean zzEOFDone){
    this.zzEOFDone=zzEOFDone;
  }
  /** 
 * @return the zzAtBOL
 */
  public boolean isZzAtBOL(){
    return zzAtBOL;
  }
  /** 
 * @param zzAtBOL the zzAtBOL to set
 */
  public void setZzAtBOL(  boolean zzAtBOL){
    this.zzAtBOL=zzAtBOL;
  }
  @Override public void reset(){
    super.reset();
  }
  @Override public int getLine(){
    return yyline;
  }
  @Override public int getCharIndex(){
    return yychar;
  }
  @Override public int getCharPositionInLine(){
    return yycolumn;
  }
  /** 
 * Creates a new scanner
 * @param in  the java.io.Reader to read input from.
 */
  public JFlexInternalAdbLexer(  org.xtext.ada2005.parser.antlr.lexer.jflex.Reader in){
    this.zzReader=in;
  }
  /** 
 * Unpacks the compressed character translation table.
 * @param packed   the packed character translation table
 * @return         the unpacked character translation table
 */
  private static char[] zzUnpackCMap(  String packed){
    char[] map=new char[0x110000];
    int i=0;
    int j=0;
    while (i < 4264) {
      int count=packed.charAt(i++);
      char value=packed.charAt(i++);
      do       map[j++]=value;
 while (--count > 0);
    }
    return map;
  }
  /** 
 * Refills the input buffer.
 * @return      <code>false</code>, iff there was new input.
 * @exception java.io.IOException  if any I/O-Error occurs
 */
  private boolean zzRefill() throws java.io.IOException {
    if (zzStartRead > 0) {
      zzEndRead+=zzFinalHighSurrogate;
      zzFinalHighSurrogate=0;
      System.arraycopy(zzBuffer,zzStartRead,zzBuffer,0,zzEndRead - zzStartRead);
      zzEndRead-=zzStartRead;
      zzCurrentPos-=zzStartRead;
      zzMarkedPos-=zzStartRead;
      zzStartRead=0;
    }
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      char newBuffer[]=new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer,0,newBuffer,0,zzBuffer.length);
      zzBuffer=newBuffer;
      zzEndRead+=zzFinalHighSurrogate;
      zzFinalHighSurrogate=0;
    }
    int requested=zzBuffer.length - zzEndRead;
    int numRead=zzReader.read(zzBuffer,zzEndRead,requested);
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead+=numRead;
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate=1;
        }
      }
      return false;
    }
    return true;
  }
  /** 
 * Closes the input stream.
 */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF=true;
    zzEndRead=zzStartRead;
    if (zzReader != null)     zzReader.close();
  }
  /** 
 * Resets the scanner to read from a new input stream. Does not close the old reader. All internal variables are reset, the old input stream  <b>cannot</b> be reused (internal buffer is discarded and lost). Lexical state is set to <tt>ZZ_INITIAL</tt>. Internal scan buffer is resized down to its initial length, if it has grown.
 * @param reader   the new input stream 
 */
  public final void yyreset(  org.xtext.ada2005.parser.antlr.lexer.jflex.Reader reader){
    zzReader=reader;
    zzAtBOL=true;
    zzAtEOF=false;
    zzEOFDone=false;
    zzEndRead=zzStartRead=0;
    zzCurrentPos=zzMarkedPos=0;
    zzFinalHighSurrogate=0;
    yyline=yychar=yycolumn=0;
    zzLexicalState=YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)     zzBuffer=new char[ZZ_BUFFERSIZE];
  }
  /** 
 * Returns the current lexical state.
 */
  public final int yystate(){
    return zzLexicalState;
  }
  /** 
 * Enters a new lexical state
 * @param newState the new lexical state
 */
  public final void yybegin(  int newState){
    zzLexicalState=newState;
  }
  /** 
 * Returns the text matched by the current regular expression.
 */
  public final String yytext(){
    return new String(zzBuffer,zzStartRead,zzMarkedPos - zzStartRead);
  }
  /** 
 * Returns the character at position <tt>pos</tt> from the  matched text.  It is equivalent to yytext().charAt(pos), but faster
 * @param pos the position of the character to fetch. A value from 0 to yylength()-1.
 * @return the character at position pos
 */
  public final char yycharat(  int pos){
    return zzBuffer[zzStartRead + pos];
  }
  /** 
 * Returns the length of the matched text region.
 */
  public final int yylength(){
    return zzMarkedPos - zzStartRead;
  }
  /** 
 * Reports an error that occured while scanning. In a wellformed scanner (no or only correct usage of  yypushback(int) and a match-all fallback rule) this method  will only be called with things that "Can't Possibly Happen". If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty scanner etc.). Usual syntax/scanner level error handling should be done in error fallback rules.
 * @param errorCode  the code of the errormessage to display
 */
  private void zzScanError(  int errorCode){
    String message;
    try {
      message=ZZ_ERROR_MSG[errorCode];
    }
 catch (    ArrayIndexOutOfBoundsException e) {
      message=ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }
    throw new Error(message);
  }
  /** 
 * Pushes the specified amount of characters back into the input stream. They will be read again by then next call of the scanning method
 * @param number  the number of characters to be read again.This number must not be greater than yylength()!
 */
  public void yypushback(  int number){
    if (number > yylength())     zzScanError(ZZ_PUSHBACK_2BIG);
    zzMarkedPos-=number;
  }
  /** 
 * Resumes scanning until the next regular expression is matched, the end of input is encountered or an I/O-Error occurs.
 * @return      the next token
 * @exception java.io.IOException  if any I/O-Error occurs
 */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL=zzEndRead;
    char[] zzBufferL=zzBuffer;
    char[] zzCMapL=ZZ_CMAP;
    int[] zzTransL=ZZ_TRANS;
    int[] zzRowMapL=ZZ_ROWMAP;
    int[] zzAttrL=ZZ_ATTRIBUTE;
    while (true) {
      zzMarkedPosL=zzMarkedPos;
      yychar+=zzMarkedPosL - zzStartRead;
      boolean zzR=false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL=zzStartRead; zzCurrentPosL < zzMarkedPosL; zzCurrentPosL+=zzCharCount) {
        zzCh=Character.codePointAt(zzBufferL,zzCurrentPosL,zzMarkedPosL);
        zzCharCount=Character.charCount(zzCh);
switch (zzCh) {
case '\u000B':
case '\u000C':
case '\u0085':
case '\u2028':
case '\u2029':
          yyline++;
        yycolumn=0;
      zzR=false;
    break;
case '\r':
  yyline++;
yycolumn=0;
zzR=true;
break;
case '\n':
if (zzR) zzR=false;
 else {
yyline++;
yycolumn=0;
}
break;
default :
zzR=false;
yycolumn+=zzCharCount;
}
}
if (zzR) {
boolean zzPeek;
if (zzMarkedPosL < zzEndReadL) zzPeek=zzBufferL[zzMarkedPosL] == '\n';
 else if (zzAtEOF) zzPeek=false;
 else {
boolean eof=zzRefill();
zzEndReadL=zzEndRead;
zzMarkedPosL=zzMarkedPos;
zzBufferL=zzBuffer;
if (eof) zzPeek=false;
 else zzPeek=zzBufferL[zzMarkedPosL] == '\n';
}
if (zzPeek) yyline--;
}
zzAction=-1;
zzCurrentPosL=zzCurrentPos=zzStartRead=zzMarkedPosL;
zzState=ZZ_LEXSTATE[zzLexicalState];
int zzAttributes=zzAttrL[zzState];
if ((zzAttributes & 1) == 1) {
zzAction=zzState;
}
zzForAction: {
while (true) {
if (zzCurrentPosL < zzEndReadL) {
zzInput=Character.codePointAt(zzBufferL,zzCurrentPosL,zzEndReadL);
zzCurrentPosL+=Character.charCount(zzInput);
}
 else if (zzAtEOF) {
zzInput=YYEOF;
break zzForAction;
}
 else {
zzCurrentPos=zzCurrentPosL;
zzMarkedPos=zzMarkedPosL;
boolean eof=zzRefill();
zzCurrentPosL=zzCurrentPos;
zzMarkedPosL=zzMarkedPos;
zzBufferL=zzBuffer;
zzEndReadL=zzEndRead;
if (eof) {
zzInput=YYEOF;
break zzForAction;
}
 else {
zzInput=Character.codePointAt(zzBufferL,zzCurrentPosL,zzEndReadL);
zzCurrentPosL+=Character.charCount(zzInput);
}
}
int zzNext=zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
if (zzNext == -1) break zzForAction;
zzState=zzNext;
zzAttributes=zzAttrL[zzState];
if ((zzAttributes & 1) == 1) {
zzAction=zzState;
zzMarkedPosL=zzCurrentPosL;
if ((zzAttributes & 8) == 8) break zzForAction;
}
}
}
zzMarkedPos=zzMarkedPosL;
if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
zzAtEOF=true;
{
return Token.EOF;
}
}
 else {
switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
case 1:
{
return yytext().charAt(0);
}
case 110:
break;
case 2:
{
return RULE_NUMERIC_LITERAL;
}
case 111:
break;
case 3:
{
return RULE_IDENTIFIER;
}
case 112:
break;
case 4:
{
return RULE_MOINS;
}
case 113:
break;
case 5:
{
return RULE_PLUS;
}
case 114:
break;
case 6:
{
return RULE_P;
}
case 115:
break;
case 7:
{
return RULE_WS;
}
case 116:
break;
case 8:
{
return RULE_QUOTE;
}
case 117:
break;
case 9:
{
return RULE_ET_COM;
}
case 118:
break;
case 10:
{
return RULE_EG;
}
case 119:
break;
case 11:
{
return RULE_SLASH;
}
case 120:
break;
case 12:
{
return RULE_INF;
}
case 121:
break;
case 13:
{
return RULE_SUP;
}
case 122:
break;
case 14:
{
return RULE_ETOI;
}
case 123:
break;
case 15:
{
return RULE_PV;
}
case 124:
break;
case 16:
{
return RULE_DP;
}
case 125:
break;
case 17:
{
return RULE_V;
}
case 126:
break;
case 18:
{
return RULE_PG;
}
case 127:
break;
case 19:
{
return RULE_PD;
}
case 128:
break;
case 20:
{
return RULE_BV;
}
case 129:
break;
case 21:
{
return RULE_SL_COMMENT;
}
case 130:
break;
case 22:
{
return RULE_PP;
}
case 131:
break;
case 23:
{
return RULE_AT_;
}
case 132:
break;
case 24:
{
return RULE_DO_;
}
case 133:
break;
case 25:
{
return RULE_STRING_LITERAL;
}
case 134:
break;
case 26:
{
return RULE_OF_;
}
case 135:
break;
case 27:
{
return RULE_OR_;
}
case 136:
break;
case 28:
{
return RULE_FLECHE;
}
case 137:
break;
case 29:
{
return RULE_DIFF;
}
case 138:
break;
case 30:
{
return RULE_INFE;
}
case 139:
break;
case 31:
{
return RULE_CHG;
}
case 140:
break;
case 32:
{
return RULE_BOIT;
}
case 141:
break;
case 33:
{
return RULE_SUPE;
}
case 142:
break;
case 34:
{
return RULE_CHD;
}
case 143:
break;
case 35:
{
return RULE_ETOI2;
}
case 144:
break;
case 36:
{
return RULE_IF_;
}
case 145:
break;
case 37:
{
return RULE_IN_;
}
case 146:
break;
case 38:
{
return RULE_IS_;
}
case 147:
break;
case 39:
{
return RULE_DPE;
}
case 148:
break;
case 40:
{
return RULE_END_;
}
case 149:
break;
case 41:
{
return RULE_ABS_;
}
case 150:
break;
case 42:
{
return RULE_AND_;
}
case 151:
break;
case 43:
{
return RULE_ALL_;
}
case 152:
break;
case 44:
{
return RULE_FOR_;
}
case 153:
break;
case 45:
{
return RULE_OPERATOR_SYMBOL;
}
case 154:
break;
case 46:
{
return RULE_NEW_;
}
case 155:
break;
case 47:
{
return RULE_NOT_;
}
case 156:
break;
case 48:
{
return RULE_OUT_;
}
case 157:
break;
case 49:
{
return RULE_REM_;
}
case 158:
break;
case 50:
{
return RULE_XOR_;
}
case 159:
break;
case 51:
{
return RULE_MOD_;
}
case 160:
break;
case 52:
{
return RULE_USE_;
}
case 161:
break;
case 53:
{
return RULE_EXIT_;
}
case 162:
break;
case 54:
{
return RULE_ELSE_;
}
case 163:
break;
case 55:
{
return RULE_BODY_;
}
case 164:
break;
case 56:
{
return RULE_CASE_;
}
case 165:
break;
case 57:
zzMarkedPos=Character.offsetByCodePoints(zzBufferL,zzStartRead,zzEndRead - zzStartRead,zzMarkedPos,-1);
{
return RULE_CHARACTER_LITERAL;
}
case 166:
break;
case 58:
{
return RULE_NULL_;
}
case 167:
break;
case 59:
{
return RULE_TASK_;
}
case 168:
break;
case 60:
{
return RULE_TYPE_;
}
case 169:
break;
case 61:
{
return RULE_THEN_;
}
case 170:
break;
case 62:
{
return RULE_LOOP_;
}
case 171:
break;
case 63:
{
return RULE_GOTO_;
}
case 172:
break;
case 64:
{
return RULE_WITH_;
}
case 173:
break;
case 65:
{
return RULE_WHEN_;
}
case 174:
break;
case 66:
{
return RULE_ENTRY_;
}
case 175:
break;
case 67:
{
return RULE_ELSIF_;
}
case 176:
break;
case 68:
{
return RULE_ABORT_;
}
case 177:
break;
case 69:
{
return RULE_ARRAY_;
}
case 178:
break;
case 70:
{
return RULE_BEGIN_;
}
case 179:
break;
case 71:
{
return RULE_DELAY_;
}
case 180:
break;
case 72:
{
return RULE_DELTA_;
}
case 181:
break;
case 73:
{
int zzFState=1;
int zzFPos=zzStartRead;
if (zzFin.length <= zzBufferL.length) {
zzFin=new boolean[zzBufferL.length + 1];
}
boolean zzFinL[]=zzFin;
while (zzFState != -1 && zzFPos < zzMarkedPos) {
zzFinL[zzFPos]=((zzAttrL[zzFState] & 1) == 1);
zzInput=Character.codePointAt(zzBufferL,zzFPos,zzMarkedPos);
zzFPos+=Character.charCount(zzInput);
zzFState=zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
}
if (zzFState != -1) {
zzFinL[zzFPos++]=((zzAttrL[zzFState] & 1) == 1);
}
while (zzFPos <= zzMarkedPos) {
zzFinL[zzFPos++]=false;
}
zzFState=3;
zzFPos=zzMarkedPos;
while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
zzInput=Character.codePointBefore(zzBufferL,zzFPos,zzStartRead);
zzFPos-=Character.charCount(zzInput);
zzFState=zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
}
;
zzMarkedPos=zzFPos;
}
{
return RULE_CHARACTER_LITERAL;
}
case 182:
break;
case 74:
{
int zzFState=1;
int zzFPos=zzStartRead;
if (zzFin.length <= zzBufferL.length) {
zzFin=new boolean[zzBufferL.length + 1];
}
boolean zzFinL[]=zzFin;
while (zzFState != -1 && zzFPos < zzMarkedPos) {
zzFinL[zzFPos]=((zzAttrL[zzFState] & 1) == 1);
zzInput=Character.codePointAt(zzBufferL,zzFPos,zzMarkedPos);
zzFPos+=Character.charCount(zzInput);
zzFState=zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
}
if (zzFState != -1) {
zzFinL[zzFPos++]=((zzAttrL[zzFState] & 1) == 1);
}
while (zzFPos <= zzMarkedPos) {
zzFinL[zzFPos++]=false;
}
zzFState=2;
zzFPos=zzMarkedPos;
while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
zzInput=Character.codePointBefore(zzBufferL,zzFPos,zzStartRead);
zzFPos-=Character.charCount(zzInput);
zzFState=zzTransL[zzRowMapL[zzFState] + zzCMapL[zzInput]];
}
;
zzMarkedPos=zzFPos;
}
{
return RULE_CHARACTER_LITERAL;
}
case 183:
break;
case 75:
zzMarkedPos=Character.offsetByCodePoints(zzBufferL,zzStartRead,zzEndRead - zzStartRead,zzMarkedPos,-2);
{
return RULE_CHARACTER_LITERAL;
}
case 184:
break;
case 76:
{
return RULE_RANGE_;
}
case 185:
break;
case 77:
{
return RULE_RAISE_;
}
case 186:
break;
case 78:
{
return RULE_UNTIL_;
}
case 187:
break;
case 79:
{
return RULE_WHILE_;
}
case 188:
break;
case 80:
{
return RULE_ACCESS_;
}
case 189:
break;
case 81:
{
return RULE_ACCEPT_;
}
case 190:
break;
case 82:
{
return RULE_DIGITS_;
}
case 191:
break;
case 83:
{
return RULE_OTHERS_;
}
case 192:
break;
case 84:
{
return RULE_RECORD_;
}
case 193:
break;
case 85:
{
return RULE_RETURN_;
}
case 194:
break;
case 86:
{
return RULE_SELECT_;
}
case 195:
break;
case 87:
{
return RULE_TAGGED_;
}
case 196:
break;
case 88:
{
return RULE_PRAGMA_;
}
case 197:
break;
case 89:
{
return RULE_ALIASED_;
}
case 198:
break;
case 90:
{
return RULE_DECLARE_;
}
case 199:
break;
case 91:
{
return RULE_RENAMES_;
}
case 200:
break;
case 92:
{
return RULE_REVERSE_;
}
case 201:
break;
case 93:
{
return RULE_REQUEUE_;
}
case 202:
break;
case 94:
{
return RULE_SUBTYPE_;
}
case 203:
break;
case 95:
{
return RULE_PACKAGE_;
}
case 204:
break;
case 96:
{
return RULE_PRIVATE_;
}
case 205:
break;
case 97:
{
return RULE_LIMITED_;
}
case 206:
break;
case 98:
{
return RULE_GENERIC_;
}
case 207:
break;
case 99:
{
return RULE_ABSTRACT_;
}
case 208:
break;
case 100:
{
return RULE_CONSTANT_;
}
case 209:
break;
case 101:
{
return RULE_FUNCTION_;
}
case 210:
break;
case 102:
{
return RULE_SEPARATE_;
}
case 211:
break;
case 103:
{
return RULE_EXCEPTION_;
}
case 212:
break;
case 104:
{
return RULE_TERMINATE_;
}
case 213:
break;
case 105:
{
return RULE_PROCEDURE_;
}
case 214:
break;
case 106:
{
return RULE_PROTECTED_;
}
case 215:
break;
case 107:
{
return RULE_INTERFACE_;
}
case 216:
break;
case 108:
{
return RULE_OVERRIDING_;
}
case 217:
break;
case 109:
{
return RULE_SYNCHRONIZED_;
}
case 218:
break;
default :
zzScanError(ZZ_NO_MATCH);
}
}
}
}
}
